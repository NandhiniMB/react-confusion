[{"E:\\Projects\\React_Projects\\confusion\\src\\index.js":"1","E:\\Projects\\React_Projects\\confusion\\src\\App.js":"2","E:\\Projects\\React_Projects\\confusion\\src\\reportWebVitals.js":"3","E:\\Projects\\React_Projects\\confusion\\src\\components\\MenuComponent.js":"4","E:\\Projects\\React_Projects\\confusion\\src\\shared\\dishes.js":"5","E:\\Projects\\React_Projects\\confusion\\src\\components\\DishDetailComponent.js":"6","E:\\Projects\\React_Projects\\confusion\\src\\components\\MainComponent.js":"7","E:\\Projects\\React_Projects\\confusion\\src\\components\\HeaderComponent.js":"8","E:\\Projects\\React_Projects\\confusion\\src\\components\\FooterComponent.js":"9","E:\\Projects\\React_Projects\\confusion\\src\\components\\HomeComponent.js":"10","E:\\Projects\\React_Projects\\confusion\\src\\components\\ContactComponent.js":"11","E:\\Projects\\React_Projects\\confusion\\src\\shared\\comments.js":"12","E:\\Projects\\React_Projects\\confusion\\src\\shared\\promotions.js":"13","E:\\Projects\\React_Projects\\confusion\\src\\shared\\leaders.js":"14","E:\\Projects\\React_Projects\\confusion\\src\\components\\AboutComponent.js":"15","E:\\Projects\\React_Projects\\confusion\\src\\redux\\configureStore.js":"16","E:\\Projects\\React_Projects\\confusion\\src\\redux\\reducer.js":"17","E:\\Projects\\React_Projects\\confusion\\src\\redux\\dishes.js":"18","E:\\Projects\\React_Projects\\confusion\\src\\redux\\comments.js":"19","E:\\Projects\\React_Projects\\confusion\\src\\redux\\promotions.js":"20","E:\\Projects\\React_Projects\\confusion\\src\\redux\\leaders.js":"21","E:\\Projects\\React_Projects\\confusion\\src\\redux\\ActionTypes.js":"22","E:\\Projects\\React_Projects\\confusion\\src\\redux\\ActionCreators.js":"23","E:\\Projects\\React_Projects\\confusion\\src\\components\\LoadingComponent.js":"24","E:\\Projects\\React_Projects\\confusion\\src\\redux\\forms.js":"25","E:\\Projects\\React_Projects\\confusion\\src\\components\\CommentComponent.js":"26","E:\\Projects\\React_Projects\\confusion\\src\\shared\\baseUrl.js":"27"},{"size":656,"mtime":1607167484781,"results":"28","hashOfConfig":"29"},{"size":539,"mtime":1608021186540,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":1643,"mtime":1608705102205,"results":"32","hashOfConfig":"29"},{"size":1490,"mtime":1607431869454,"results":"33","hashOfConfig":"29"},{"size":2981,"mtime":1608705084863,"results":"34","hashOfConfig":"29"},{"size":3632,"mtime":1608704211435,"results":"35","hashOfConfig":"29"},{"size":5141,"mtime":1607840110048,"results":"36","hashOfConfig":"29"},{"size":2635,"mtime":1607660626552,"results":"37","hashOfConfig":"29"},{"size":1863,"mtime":1608705229564,"results":"38","hashOfConfig":"29"},{"size":17490,"mtime":1608386532962,"results":"39","hashOfConfig":"29"},{"size":4280,"mtime":1607432873732,"results":"40","hashOfConfig":"29"},{"size":445,"mtime":1607432498390,"results":"41","hashOfConfig":"29"},{"size":2382,"mtime":1607431893221,"results":"42","hashOfConfig":"29"},{"size":4310,"mtime":1607663476332,"results":"43","hashOfConfig":"29"},{"size":815,"mtime":1608382259047,"results":"44","hashOfConfig":"29"},{"size":407,"mtime":1608021181094,"results":"45","hashOfConfig":"29"},{"size":598,"mtime":1608357979309,"results":"46","hashOfConfig":"29"},{"size":634,"mtime":1608703612528,"results":"47","hashOfConfig":"29"},{"size":683,"mtime":1608703635281,"results":"48","hashOfConfig":"29"},{"size":185,"mtime":1608191639343,"results":"49","hashOfConfig":"29"},{"size":424,"mtime":1608699404858,"results":"50","hashOfConfig":"29"},{"size":1898,"mtime":1608704460260,"results":"51","hashOfConfig":"29"},{"size":256,"mtime":1608357071097,"results":"52","hashOfConfig":"29"},{"size":170,"mtime":1608381972760,"results":"53","hashOfConfig":"29"},{"size":4698,"mtime":1608386437554,"results":"54","hashOfConfig":"29"},{"size":48,"mtime":1608699155237,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"qy6ms3",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\React_Projects\\confusion\\src\\index.js",[],["114","115"],"E:\\Projects\\React_Projects\\confusion\\src\\App.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\reportWebVitals.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\components\\MenuComponent.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\shared\\dishes.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\components\\DishDetailComponent.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\components\\MainComponent.js",["116"],"E:\\Projects\\React_Projects\\confusion\\src\\components\\HeaderComponent.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\components\\FooterComponent.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\components\\HomeComponent.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\components\\ContactComponent.js",["117","118","119","120","121","122","123","124","125"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {BreadcrumbItem,Breadcrumb,Button,Label, Row, Col} from 'reactstrap';\r\nimport {Control,Form,Errors,actions} from 'react-redux-form'\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass  Contact extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n        //this.handleInputChange=this.handleInputChange.bind(this);\r\n        //this.handleBlur=this.handleBlur.bind(this);\r\n       \r\n        // this.state = {\r\n        //     firstname : '',\r\n        //     lastname : '',\r\n        //     telnum : '',\r\n        //     email : '',\r\n        //     agree: false,\r\n        //     contactType: 'Tel,',\r\n        //     message: '',\r\n        //     touched:{\r\n        //         firstname:false,\r\n        //         lastname: false,\r\n        //         telnum : false,\r\n        //         email: false\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    // handleBlur = (field) => (evt) =>\r\n    // {\r\n    //     this.setState({\r\n    //         touched:{...this.state.touched, [field]:true}\r\n    //     });\r\n\r\n    //}\r\n\r\n    // validate(firstname,lastname,telnum,email){\r\n    //     const errors={\r\n    //         firstname : '',\r\n    //         lastname : '',\r\n    //         telnum : '',\r\n    //         email : '',\r\n    //     }\r\n\r\n    //     if(this.state.touched.firstname && firstname.length<3)\r\n    //       errors.firstname = \"Invalid FirstName\";\r\n    //     else if(this.state.touched.firstname && firstname.length > 10)\r\n    //       errors.firstname = \"Invalid FirstName\";\r\n        \r\n    //     if(this.state.touched.lastname && lastname.length<3)\r\n    //       errors.lastname = \"Invalid LastName\";\r\n    //     else if(this.state.touched.lastname && lastname.length > 10)\r\n    //       errors.lastname = \"Invalid LastName\";\r\n\r\n    //     const reg = /^\\d+$/;\r\n    //     if(this.state.touched.telnum && !reg.test(telnum))\r\n    //       errors.telnum =\"Invalid Number\";\r\n\r\n    //     if(this.state.touched.email &&  email.split('').filter(x =>x === '@').length !== 1)\r\n    //     errors.telnum =\"Invalid Email\";\r\n\r\n    //     return errors;\r\n\r\n        \r\n    // }\r\n\r\n\r\n    // handleInputChange(event){\r\n    //     const target = event.target;\r\n    //     const value= target.type === 'checkbox' ? target.checked : target.value;\r\n    //     const name= target.name;       \r\n\r\n    //     this.setState({\r\n    //         [name]:value\r\n    //     });\r\n\r\n    // }\r\n\r\n    handleSubmit(values)\r\n    {\r\n        console.log(\"Current state is : \"+JSON.stringify(values));\r\n        alert(\"Current state is : \"+JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n       \r\n    }\r\n\r\n    render(){\r\n\r\n       // const errors = this.validate(this.state.firstname,this.state.lastname,this.state.telnum,this.state.email);\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row row-content\">\r\n              <Breadcrumb>\r\n              <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n              <BreadcrumbItem active>Contact</BreadcrumbItem>\r\n              </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        {/* <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"firstname\" md={2} sm={2}> FirstName</Label>\r\n                                <Col md={10} sm={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"  placeholder= \"First Name \" value={this.state.firstname} \r\n                                    onBlur={this.handleBlur('firstname')} onChange={this.handleInputChange} valid={errors.firstname === ''} invalid={errors.firstname != ''}/>\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"lastname\" md={2} sm={2}> LastName</Label>\r\n                                <Col md={10} sm={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder= \"Last Name \" value={this.state.lastname} \r\n                                    onBlur={this.handleBlur('lastname')} onChange={this.handleInputChange} valid={errors.lastname === ''} invalid={errors.lastname != ''}/>\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"telnum\" md={2} sm={2}>Contact</Label>\r\n                                <Col md={10} sm={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder= \"Phone Number \" value={this.state.telnum} \r\n                                    onBlur={this.handleBlur('telnum')} onChange={this.handleInputChange} valid={errors.telnum === ''} invalid={errors.telnum != ''}/>\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"email\" md={2} sm={2}>Email</Label>\r\n                                <Col md={10} sm={10}>\r\n                                    <Input type=\"text\" id=\"email\" name=\"email\" placeholder= \"Email\" value={this.state.email}\r\n                                     onBlur={this.handleBlur('email')} onChange={this.handleInputChange} valid={errors.email === ''} invalid={errors.email != ''}/>\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Col md={{size:5, offset:2}}>\r\n                                     <FormGroup check>\r\n                                         <Label check>\r\n                                             <Input type=\"checkbox\" name=\"agree\" checked={this.state.agree} \r\n                                             onChange={this.handleInputChange} /> \r\n                                             <strong>May We contact You</strong>  \r\n                                         </Label>\r\n                                     </FormGroup>\r\n                                </Col>\r\n                                    \r\n                                <Col md={{size:4, offset:1}}>\r\n                                    <Input type=\"select\" name=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>      \r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Label htmlfor=\"message\" md={2} sm={2}>Feedback</Label>\r\n                                <Col md={10} sm={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"  rows=\"12\" value={this.state.message} onChange={this.handleInputChange}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form> */}\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\" /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default Contact;","E:\\Projects\\React_Projects\\confusion\\src\\shared\\comments.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\shared\\promotions.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\shared\\leaders.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\components\\AboutComponent.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\redux\\configureStore.js",["126","127"],"import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport { Reducer, initialState } from './reducer'\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {createForms} from 'react-redux-form';\r\nimport {InitialFeedback} from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n          dishes:Dishes,\r\n          comments : Comments,\r\n          promotions: Promotions,\r\n          leaders:Leaders,\r\n          ...createForms({feedback : InitialFeedback})\r\n        }), // reducer\r\n        applyMiddleware(thunk,logger)\r\n       \r\n    );\r\n\r\n    return store;\r\n}","E:\\Projects\\React_Projects\\confusion\\src\\redux\\reducer.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\redux\\dishes.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\redux\\comments.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\redux\\promotions.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\redux\\leaders.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\redux\\ActionTypes.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\redux\\ActionCreators.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\components\\LoadingComponent.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\redux\\forms.js",[],"E:\\Projects\\React_Projects\\confusion\\src\\components\\CommentComponent.js",["128","129","130","131"],"import React,{Component} from 'react';\r\nimport {Control,LocalForm,Errors} from 'react-redux-form'\r\nimport {Button,Field, Row,Col,Label,Modal,  ModalBody, ModalHeader} from 'reactstrap';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n class CommentForm extends Component\r\n    {\r\n\r\n        constructor(props){\r\n            super(props);\r\n\r\n        this.state={\r\n            isModalOpen : false\r\n        };\r\n       \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit =this.handleSubmit.bind(this);\r\n        }\r\n\r\n        toggleModal(){\r\n            this.setState({\r\n                isModalOpen : !this.state.isModalOpen\r\n            });\r\n        }\r\n        \r\n        handleSubmit(values){\r\n            this.toggleModal();\r\n            this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n            console.log(\"Current state is : \"+JSON.stringify(values));\r\n            alert(\"Current state is : \"+JSON.stringify(values));\r\n        }\r\n\r\n        render()\r\n        {\r\n            return(\r\n                 <div>\r\n                 <Button   onClick={this.toggleModal} type=\"submit\" color=\"secondary\"><span className=\"fa fa-edit fa-lg\"></span>Comment </Button>\r\n                 <Modal isOpen={this.state.isModalOpen}>\r\n                 <ModalHeader toggle={this.toggleModal}>Add Comments</ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"Rating\" md={2}>Rating</Label>\r\n                            <Col md={10}>\r\n                            <Control.select model=\".rating\" name=\"rating\" placeholder=\"rating\" \r\n                            className=\"form-control\">\r\n    \r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                             </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"Name\" md={2}>Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"Comment\" md={2}>Add Comment</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                    placeholder=\"Add Comment\" className=\"form-control\" rows=\"6\"/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                    </LocalForm>\r\n                    </ModalBody>\r\n                 </Modal>\r\n                 </div>\r\n            );\r\n                \r\n        }\r\n    }\r\n\r\n    export default CommentForm;","E:\\Projects\\React_Projects\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":35,"column":3,"nodeType":"138","messageId":"139","endLine":45,"endColumn":4},{"ruleId":"140","severity":1,"message":"141","line":4,"column":29,"nodeType":"142","messageId":"143","endLine":4,"endColumn":36},{"ruleId":"144","severity":1,"message":"145","line":127,"column":29,"nodeType":"146","endLine":127,"endColumn":71},{"ruleId":"147","severity":1,"message":"148","line":208,"column":37,"nodeType":"146","endLine":214,"endColumn":44},{"ruleId":"147","severity":1,"message":"148","line":230,"column":37,"nodeType":"146","endLine":236,"endColumn":44},{"ruleId":"147","severity":1,"message":"148","line":252,"column":37,"nodeType":"146","endLine":258,"endColumn":44},{"ruleId":"147","severity":1,"message":"148","line":275,"column":37,"nodeType":"146","endLine":281,"endColumn":44},{"ruleId":"147","severity":1,"message":"149","line":297,"column":45,"nodeType":"146","endLine":298,"endColumn":80},{"ruleId":"147","severity":1,"message":"150","line":304,"column":37,"nodeType":"146","endLine":305,"endColumn":66},{"ruleId":"147","severity":1,"message":"151","line":314,"column":37,"nodeType":"146","endLine":316,"endColumn":68},{"ruleId":"140","severity":1,"message":"152","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":17},{"ruleId":"140","severity":1,"message":"153","line":2,"column":19,"nodeType":"142","messageId":"143","endLine":2,"endColumn":31},{"ruleId":"140","severity":1,"message":"154","line":3,"column":16,"nodeType":"142","messageId":"143","endLine":3,"endColumn":21},{"ruleId":"147","severity":1,"message":"150","line":47,"column":29,"nodeType":"146","endLine":48,"endColumn":54},{"ruleId":"147","severity":1,"message":"148","line":61,"column":37,"nodeType":"146","endLine":67,"endColumn":44},{"ruleId":"147","severity":1,"message":"151","line":83,"column":33,"nodeType":"146","endLine":84,"endColumn":98},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'Reducer' is defined but never used.","'initialState' is defined but never used.","'Field' is defined but never used.","no-global-assign","no-unsafe-negation"]